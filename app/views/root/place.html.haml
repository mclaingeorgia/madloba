= content_for :custom_stylesheet, 'page/place'
= content_for :custom_javascript, 'page/place'
%section.content
  .summary-wrapper
    .summary
      .name
        = item.name
      .provider-name
        %span #{"by "}
        %a{href: root_path(what: item.provider.name)}= item.provider.name
      %ul.services
        = item.services.sorted.map { |s| "<li class='service'><a href='#{root_path(services:[s.id])}'><i class='#{s.icon}'></i><span>#{s.name}</span></a></li>" }.join("").html_safe
      %ul.contact
        - if item.address.present?
          %li
            %span.icon.address
            = item.address
        - if item.phone.present?
          %li
            %span.icon.phone
            = item.phone
        - if item.website.present?
          %li
            %span.icon.website
            = item.website
    .place-map
      .corner
        %img{src: asset_path("svg/corner2.svg")}
      =  item.get_rating
      = render partial: "shared/rating", locals: { rating: item.get_rating }
      .map-container
        #place_map.map{ 'data-latitude': item.latitude, 'data-longitude': item.longitude }
        .map-zoomer
          .in{'data-map': 'place_map'} +
          .hr
          .out{'data-map': 'place_map'} âˆ’
  .details-wrapper
    %section.details
      %ul.action-bar
        %li
          = render partial: 'shared/favoritor', locals: { is_favorite: is_favorite_place, href: place_path(id: item.id, a: 'favorite', v: !is_favorite_place), href_template: place_path(id: item.id, a: 'favorite', v: '_v_'), label: is_favorite_place ? t('.remove_from_favorite') : t('.add_to_favorite') }
        %li.mobile
          = render partial: "shared/rating", locals: { rating: item.get_rating, with_label: true }
        %li
          = render partial: 'shared/rator', locals: {rator: {'data-href-template': place_path(id: item.id, a: 'rate', v: '_v_'), 'data-xhr-redirected': 'rator', 'data-xhr-format': 'json', 'data-r': user_rate }}
        - if user_signed_in? && !item.provider.users.include?(current_user)
          %li
            - if is_report_requested
              .report
                %label=t('.report_underway')
            - else
              %a.report{'data-dialog-link': 'place_report', href:"javascript:void(0);"}
                -#@href: place_path(id: item.id, a: 'report'), 'data-xhr': 'report', 'data-xhr-format': 'json'}
                =t('.report')
          %li
            - if is_ownership_requested
              .take-ownership
                %label=t('.take_ownership_underway')
            - else
              %a.take-ownership{href: place_path(id: item.id, a: 'ownership'), 'data-xhr': 'ownership', 'data-xhr-format': 'json'}
                =t('.take_ownership')
        %li
          .share
            %label=t('.share')
            %a.facebook{target: '_blank', href: "https://www.facebook.com/sharer/sharer.php?u=#{current_url}", onclick: "javascript:window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;" }
            %a.twitter{target: '_blank', href: "https://twitter.com/share?url=#{current_url}&text=#{item.name}#{item.description}", onclick: "javascript:window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;" }
      %ul.info
        %li
          .description
            = @post_action
            = item.description
        - if item.tags.present?
          %li
            .tags
              .header= t('.service_tags')
              = item.tags.map { |s| "<a>#{s.name}</a>" }.join(", ").html_safe
        %li
          .hr
        %li
          .photos
            photos
        %li
          .contact
          .header=t('.contact_place', provider: item.name)
          .form-container.wide
            %form{action: send_message_path, method: :post, 'data-remote': true, id: 'invisible-recaptcha-form', class: 'simple_form light column'}
              = hidden_field_tag :authenticity_token, form_authenticity_token
              .fields-column
                .field-wrapper
                  %label.field-label{for: 'message_sender'}
                    =t('.your_name')
                    %abbr{title: 'required'} *
                  %input.field-input{type: 'text', name: 'message[sender]', id: 'message_sender'}
                .field-wrapper
                  %label.field-label{for: 'message_email'}
                    =t('.your_email')
                    %abbr{title: 'required'} *
                  %input.field-input{type: 'email', name: 'message[email]', id: 'message_email'}
              .fields-column.fill
                .field-wrapper
                  %label.field-label{for: 'message_text'}
                    =t('.your_message')
                    %abbr{title: 'required'} *
                  %textarea.field-input{rows: 8, name: 'message[text]', id: 'message_text'}
              .fields-column.bottom
                .actions
                  = invisible_recaptcha_tags callback: 'submitInvisibleRecaptchaForm', text: t('.send'), badge: 'inline', hl: I18n.locale
        %li
          .hr
        %li
          .comment
            .header=t('.comments')
    %section.photos
      .form-container
        = simple_form_for [:manage, Upload.new(place_id: item.id)] do |f|
          = hidden_field_tag :authenticity_token, form_authenticity_token
          = f.input :place_id, as: :hidden
          .field-wrapper.field-file
            = f.label :image do
              %img{src: asset_path("svg/upload.svg") }
              = t(".shared.upload_image")
            = f.input :image, as: :file, label: false, input_html: { name: "assets_attributes[][image]", multiple: true, onchange: "javascript:this.form.submit();" }

      .upload
        %img{src: asset_path("svg/upload.svg") }
        Upload your image
      - item.assets.each do |asset|
        .picture
          = image_tag asset.image.thumb.url
= render partial: "shared/footer", locals: { with_links: true }







-#
  - assets = f.object.assets.to_a

  - picked = nil
  - if f.object.poster_id.present?
    - picked = f.object.assets.find(f.object.poster_id)
    - assets.delete_if {|x| x.id == picked.id }
    - assets.unshift(picked)
  - assets.each do |asset|
    .field-wrapper.field-asset{'data-asset-id': asset.id, class: asset.id == f.object.poster_id ? 'picked' : nil }
      = image_tag asset.image.thumb.url

