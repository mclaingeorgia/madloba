- page_title item.name
- if item.description.present?
  - content_for(:page_desc) { item.description }
- if item.poster_id.present?
  - content_for(:meta_image) do
    %meta{:property => "og:image", :content => item.poster_url}

- content_for :custom_stylesheet, 'page/place'
- content_for :custom_javascript, 'page/place'
- if !Rails.env.development?
  - content_for :inline_javascript do
    :plain
      <div id="fb-root"></div>
      <script>(function(d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.9&appId=240650056418235";
        fjs.parentNode.insertBefore(js, fjs);
      }(document, 'script', 'facebook-jssdk'));</script>
%section.content{'data-place-id': item.id}
  .summary-wrapper
    .summary
      .name
        = item.name
      - if item.name != item.provider.name
        .provider-name
          %span #{"by "}
          %a{href: root_path(what: item.provider.name)}= item.provider.name
      %ul.services
        - view_all_service_places = t('shared.view_all_service_places')
        = item.services.sorted.map { |s| "<li class='service'><a href='#{root_path(services:[s.id])}' title='#{s.name} - #{view_all_service_places}'><i class='#{s.icon}'></i><span>#{s.name}</span></a></li>" }.join("").html_safe
      %ul.contact
        - if item.address.present?
          %li{title: item.address_full}
            %i.address
            %span= item.address_full
        - if item.phone.present?
          %li{title: item.phone}
            %i.phone
            %span= item.phone
        - if item.websites.present?
          %li.websites
            %i.website
            - item.websites.each_with_index do |website, website_i|
              %a{href: website, title: website, target: :_blank }>= item.get_domain(website)
              - if website_i + 1 != item.websites.length
                %span=',&nbsp;'.html_safe
    .place-map
      .corner
        %img{src: asset_path("svg/corner2.svg")}
      = render partial: "shared/rating", locals: { rating: item.get_rating }
      .map-container
        #place_map.map{ 'data-latitude': item.latitude, 'data-longitude': item.longitude }
        .map-zoomer
          .in{'data-map': 'place_map'} +
          .hr
          .out{'data-map': 'place_map'} âˆ’
  .details-wrapper
    %section.details
      %ul.action-bar
        %li
          = render partial: 'shared/favoritor', locals: { is_favorite: is_favorite_place, href: place_path(id: item.id, a: 'favorite', v: !is_favorite_place), href_template: place_path(id: item.id, a: 'favorite', v: '_v_'), label: is_favorite_place ? t('shared.unfavorite') : t('shared.favorite') }
        %li.mobile
          = render partial: "shared/rating", locals: { rating: item.get_rating, with_label: true }
        %li
          = render partial: 'shared/rator', locals: {rator: {'data-href-template': place_path(id: item.id, a: 'rate', v: '_v_'), 'data-xhr-redirected': 'rator', 'data-xhr-format': 'json', 'data-r': user_rate }}
        - if user_guest? || user_user? || (user_provider? && !item.provider.users.include?(current_user))
          %li
            %a.report{'data-dialog-link': 'place_report', href:"javascript:void(0);", title: t('shared.title.report')}
              =t('.report')
          %li
            - if user_guest?
              = link_to t('.take_ownership'), new_user_session_path, class: 'ownership', 'data-xhr': 'sign_in'
            - else
              - if is_ownership_requested # if provider and already requested ownership
                .ownership
                  %label=t('.take_ownership_underway')
              - else # if user or provider and not requested yet
                %a.take-ownership{href: place_path(id: item.id, a: 'ownership'), 'data-xhr': 'ownership', 'data-xhr-format': 'json', title: t('shared.title.ownership'), class: 'ownership'}
                  =t('.take_ownership')
        %li
          .share
            %label=t('.share')
            %a.facebook{target: '_blank', href: "https://www.facebook.com/sharer/sharer.php?u=#{current_url}", onclick: "javascript:window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;" }
            %a.twitter{target: '_blank', href: "https://twitter.com/share?url=#{current_url}&text=#{item.name}#{item.description}", onclick: "javascript:window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;" }
      %ul.info
        %li
          .description
            = @post_action
            = item.description
        - tags = item.tags.accepted
        - if tags.present?
          %li
            .tags
              .header= t('.service_tags')
              = tags.map { |s| "<a href='#{root_path(what: s.name)}'>#{s.name}</a>" }.join(", ").html_safe
        %li
          .hr
        %li
          .contact
            .header=t('.contact_place', provider: item.name)
            .form-container.wide
              %form{action: send_message_path(item.id), method: :post, id: 'invisible-recaptcha-form', class: 'simple_form light column'}
                = hidden_field_tag :authenticity_token, form_authenticity_token
                .fields-column
                  .field-wrapper
                    %label.field-label{for: 'message_sender'}
                      =t('.your_name')
                      %abbr{title: 'required'} *
                    %input.field-input{type: 'text', name: 'message[sender]', id: 'message_sender'}
                  .field-wrapper
                    %label.field-label{for: 'message_email'}
                      =t('.your_email')
                      %abbr{title: 'required'} *
                    %input.field-input{type: 'email', name: 'message[email]', id: 'message_email'}
                .fields-column.fill
                  .field-wrapper
                    %label.field-label{for: 'message_text'}
                      =t('.your_message')
                      %abbr{title: 'required'} *
                    %textarea.field-input{rows: 8, name: 'message[text]', id: 'message_text'}
                .fields-column.bottom
                  .actions
                    = invisible_recaptcha_tags callback: 'submitInvisibleRecaptchaForm', text: t('.send'), badge: 'inline', hl: I18n.locale
        %li
          .hr
        %li
          .comment
            .header=t('.comments')
            .fb-comments{'data-numposts': 5, width: '992px'}
    %section.photos.slides
      - if user_signed_in?
        .form-container
          = simple_form_for [:manage, Upload.new(place_id: item.id)] do |f|
            = hidden_field_tag :authenticity_token, form_authenticity_token
            = f.input :place_id, as: :hidden
            .field-wrapper.field-file
              = f.label :image do
                %img{src: asset_path("svg/upload.svg") }
                = t("shared.upload_image")
              = f.input :image, as: :file, label: false, wrapper: false, input_html: { name: "assets_attributes[][image]", multiple: true, onchange: "javascript:this.form.submit();", accept: 'image/png,image/gif,image/jpeg' }
      - else
        .field-file
          %label{href: new_user_session_path, 'data-xhr': 'sign_in'}
            %img{src: asset_path("svg/upload.svg") }
            = t("shared.upload_image")
      - item.assets_sorted.each do |asset|
        .photo
          = image_tag asset.image.url(:thumb), 'data-slide': asset.image.url(:normal)
= render partial: "shared/footer", locals: { with_links: true, klass: 'light' }
