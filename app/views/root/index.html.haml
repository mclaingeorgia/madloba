- content_for :custom_stylesheet, 'page/root'
- content_for :custom_javascript, 'page/root'
%section.content#filter
  .search
    .search-input.first
      %label=t('.what')
      %input{type: 'text', placeholder: t('.placeholder.what'), 'data-filter': 'what', value: filter[:what] }
    .bar
    .search-group
      .search-input
        %label= t('.where')
        %input{type: 'text', placeholder: t('.placeholder.where'), 'data-filter': 'where', value: filter[:where] }
      %input{type: 'submit', value: t('shared.search')}
  .filter
    %ul
      %li.prompt
        %label= t('.filters')
        = image_tag(asset_path("svg/filter.svg"), alt: t('.alt.filter'), title: t('.alt.filter'))
      %li#by_services.filter-input.collapsed{'data-filter': 'services'}
        .inner-left-border
        .toggle
          %label= t('.services')
          .filter-caret
        - filtered_services = @services.select{|s| s[4] }
        %ul.list{'data-order': filtered_services.map{|m| m[3]}}
          - filtered_services.each do |service|
            %li.service{'data-id': service[0], 'data-order': service[3]}
              %i{class: service[2]}
              %span= service[1]
              .close
        .input-group{'data-set-max-height': 'parent' }
          %ul.services
            - @services.each do |service|
              %li.service{ class: (service[4] ? 'hidden' : nil), 'data-id': service[0], 'data-order': service[3] }
                %i{ class: service[2] }
                %span= service[1]
          .button-group
            %button.reset=t('.cancel')
            %button.apply=t('.apply')
        .inner-right-border
      %li.filter-group
        #by_rate
          = render partial: 'shared/rator', locals: { rate: filter[:rate], rator: {'data-filter': 'rate'}, label: t('.rating'), is_filter: true }
        #by_favorite
          = render partial: 'shared/favoritor', locals: { is_filter: true, is_favorite: filter[:favorite], label: t('.favorites'), title: filter[:favorite] ? t('.alt.show_all') : t('.alt.show_favorite') }
  .info
    .map-view
      %span Map View
      %i
    .count
      = 0
      %span= t('.result', count: 1)
  .result-container
    %ul.result
    .desktop
      = render partial: "shared/footer", locals: { with_links: true }
%section.mapper
  .map-container
    #places_map.map
    .map-filter
      %input{type: :checkbox, name: 'filter_by_map', 'data-filter': 'map', id: 'by_map', checked: (filter[:map].present? ? 'checked' : nil), 'data-m': filter[:map].to_s }
      %label{for: 'by_map'}= t('.filter.by_map')
    .map-zoomer
      .in{'data-map': 'locator_map'} +
      .hr
      .out{'data-map': 'locator_map'} âˆ’
.mobile
  = render partial: "shared/footer"
