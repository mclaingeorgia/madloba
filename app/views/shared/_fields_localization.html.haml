- locales = I18n.available_locales
.fields-localization{{}.merge(defined?(container_options) ? container_options : {})}
  .tabs{'data-target': 'localization'}
    .d.d1
    %label=t('shared.fields_localization')
    .d.d2
    - locales.each_with_index do |locale, locale_i|
      = link_to t("app.languages.#{locale}"), 'javascript:void(0);', class: "tab-link#{I18n.locale == locale ? ' active' : ''}", 'data-link': locale
      - if locale_i != locales.length-1
        .d.d3
    .d.d4
  .tabs-content{'data-target': 'localization'}
    %ul
      - fields.each do |field|
        - field_name = field[0]
        - field_options = {}
        - field_options = field[1] if field[1].present?
        - required_locale = field_options.delete(:required_locale)
        - locales.each_with_index do |locale|
          - is_current_locale = I18n.locale == locale
          %li{class: is_current_locale ? 'active' : nil, 'data-link': locale}
            = form.input :"#{field_name}_#{locale}", { label: t("activerecord.attributes.#{form.object.class.name.downcase}.#{field[0]}") }.merge(field_options.merge(is_current_locale && required_locale == true ? {required: true} : {}))
