- content_for :head do
  / Includes the main Leaflet CSS and JS files, as well as Mapbox files
  = render 'shared/map_scripts_before_body', include_all_scripts: false
  / Specific map scripts loaded for this page
  = stylesheet_link_tag 'leaflet.awesome-markers'
  = stylesheet_link_tag 'font-awesome.min'
  = stylesheet_link_tag 'MarkerCluster'
  = stylesheet_link_tag 'MarkerCluster.Default'
  :css
    #map {
        width: 100%;
        height: 300px;
        margin: 0;
    }
.container
  - if flash[:new_ad]
    #new_ad_success_message.alert.alert-dismissable.alert-success{:style => "margin-top: 21px;"}
      %button.close{"data-dismiss" => "alert", :type => "button"} ×
      = t('ad.create_success', title: flash[:new_ad])
    - if flash[:ad_expire]
      .alert.alert-dismissable.alert-info
        %button.close{"data-dismiss" => "alert", :type => "button"} ×
        = flash[:ad_expire]
  - if flash[:success]
    .alert.alert-dismissable.alert-success{:style => "margin-top: 21px;"}
      %button.close{"data-dismiss" => "alert", :type => "button"} ×
      = flash[:success]
  - if flash[:error_message]
    .alert.alert-dismissable.alert-danger{:style => "margin-top: 21px;"}
      %button.close{"data-dismiss" => "alert", :type => "button"} ×
      = flash[:error_message]
  .row
    .col-lg-12
      %h3
        = @ad.title
         
        %span#ad_star{:style => "display: #{@ad.is_a_favorite_of(current_user) ? 'show' : 'none'};"}
          %small
            %i.glyphicon.glyphicon-star{:style => "color: orange"}
      - if flash[:new_ad] && !@map_settings['is_area']
        /
          Ad id added just when the ad has just been created. This is to be read by ad_websocket.js,
          when it is an exact location
        = hidden_field_tag 'new_ad_id', @ad.id
      .ad-title
        / "Back to main page" link
        - if url_for(:back).present? && url_for(:back).include?(request.host)
          = link_to t('ad.back_to_home'), url_for(:back)
        / "Add to your favorites" button - only available when user is signed-in
        - if current_user
          - if @ad.is_a_favorite_of(current_user)
            %a.btn.btn-danger.favorite_button.remove_favorite_button{:href => "#", :id => "#{@ad.id}"}
              %i.glyphicon.glyphicon-star>
               #{t('general_js.remove_from_favorites')}
          - else
            %a.btn.btn-warning.favorite_button.add_to_favorite_button{:href => "#", :id => "#{@ad.id}"}
              %i.glyphicon.glyphicon-star>
               #{t('general_js.add_to_favorites')}
        #error_remove{:style => "color: red;"}
  / Message to show when ad is not published yet
  - if !@ad.is_published
    - if current_user && current_user.super_admin?
      .row
        .col-lg-12.ad-paragraph
          #ad_not_published= t('ad.ad_not_published_html', editpage: (link_to t('ad.edit_page'), edit_user_service_path(@ad.id)))
    - elsif current_user && current_user.id == @ad.user_id
      .row
        .col-lg-12.ad-paragraph
          #ad_not_published= t('ad.ad_to_be_reviewed')
  .row
    .col-lg-12.ad-paragraph
      / Right-hand side: Map
      #map
  - if @ad.image?
    .row
      .col-lg-7.col-sm-12.ad-paragraph
        / Partial showing info about the ad
        = render 'shared/ad_summary'
      / Ad image
      .col-lg-5.col-sm-12.ad-image
        - if is_image_available(@ad)
          = image_tag @ad.image_url(:normal).to_s, width: '100%'
        - else
          .ad-processing
            = t('ad.show_ad_image_processed')
            %br/
            = t('ad.will_show_up')
    .row
      .col-lg-12.ad-paragraph
        / Ad description
        .ad-show-description
          %label.ad-label
            = t('ad.description_en')
            \:
          %span= simple_format(@ad.description)
  - else
    .row
      .col-lg-12.ad-paragraph
        = render 'shared/ad_summary'
      .col-lg-12.ad-paragraph
        / Ad description
        .ad-show-description
          %label.ad-label
            = t('ad.description')
            \:
          %span= simple_format(@ad.description)
  - if !@ad.no_user_at_all
    / Have the "Send a message" box, if a user is tied to this ad
    .row
      / 'Send message' text area
      = render 'shared/ads_send_message', ad: @ad
#push
/ Rendering JS scripts
- content_for :scripts do
  /
    Includes all the Javascript related to map rendering, to be loaded after page
    (Leaflet, MapQuest, and initialize_map partial that create the actual map)
  = render 'shared/map_scripts_after_body', include_all_scripts: false
  / Leaflet plug-ins and library used on the home page
  = javascript_include_tag 'leaflet.markercluster'
  / Javascript function calls, related specifically to the home page
  :javascript
    // specific script to render map markers and initialize the sidebar.
    var locations_exact = #{raw @locations_exact.to_json(:include => { :ads  => { :include => [:categories, :items] }})};
    var marker_colors = #{raw MARKER_COLORS.to_json};
    var locations_postal = null;
    var locations_district = null;
    // We're indicating that we are on the show ad page.
    var page = "#{SHOW_AD_PAGE}";
    putLocationMarkers(locations_exact, locations_postal, locations_district, null, marker_colors, page);
