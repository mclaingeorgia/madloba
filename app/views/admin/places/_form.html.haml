- p = Place
.form-container{class: @form_container_class}
  = simple_form_for obj, url: url, html: { class: @form_class } do |f|
    = devise_error_messages!
    = f.input :redirect_default, as: :hidden, input_html: { value: redirect_default }
    .column-view
      .column
        .indent
          = f.input :name, as: :string
          = f.input :director, as: :string

          .field-wrapper
            %label.field-label= p.human_attribute(:region, true, true)
            = f.collection_select :region_id, Region.sorted, :id, :name, {include_blank: true}, { class: 'field-input' }
          .field-wrapper
            %label.field-label= p.human_attribute(:municipality, true, true)
            = f.collection_select :municipality_id, Municipality.sorted, :id, :name, {include_blank: true}, { class: 'field-input' }
          = f.input :city, as: :string
          = f.input :address, as: :string
          = f.input :postal_code

          = f.input :phone, as: :string
          = f.input :phone2, as: :string
          = f.input :email, as: :string
          = f.input :website, as: :string, input_html: { placeholder: t('shared.url_placeholder') }
          = f.input :facebook, as: :string, input_html: { placeholder: t('shared.url_placeholder') }

          = f.input :published
      .column
        .indent
          %a.map-locator{'data-map': 'locator_map'}= t("shared.locate_me")
          .locator.map-container
            #locator_map.map
            .map-zoomer
              .in{'data-map': 'locator_map'} +
              .hr
              .out{'data-map': 'locator_map'} âˆ’
          = f.input :latitude, as: :hidden
          = f.input :longitude, as: :hidden
    .fields-asset
      = f.input :poster_id, as: :hidden
      =# f.object.assets.length
      .field-wrapper.field-file
        = f.label :assets do
          %img{src: asset_path("svg/camera.svg") }
          = t("shared.upload_image")
        = f.input :assets, as: :file, label: false, wrapper: false, input_html: { name: "place[assets_attributes][][image]", multiple: true, accept: 'image/png,image/gif,image/jpeg' }

      - assets = f.object.assets.to_a

      - picked = nil
      - if f.object.poster_id.present?
        - picked = f.object.assets.find(f.object.poster_id)
        - assets.delete_if {|x| x.id == picked.id }
        - assets.unshift(picked)
      - assets.each do |asset|
        .field-wrapper.field-asset{'data-asset-id': asset.id, class: asset.id == f.object.poster_id ? 'picked' : nil }
          = image_tag asset.image.thumb.url
          .field-input
            = link_to t("shared.delete_image"), destroy_asset_manage_place_path(f.object.id, place: { assets_attributes: { id: asset.id, "_destroy" => true }}), remote: true, method: :put, 'data-type': 'json', data: { confirm: t('shared.are_you_sure') }
    .actions
      .action-group
        = f.submit t("app.common.reset"), type: :reset
        = f.submit t("app.common.save")
